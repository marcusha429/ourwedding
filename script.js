emailjs.init('uslz-38maofgET7_g');

const translations = {
  en: {
    groomName: "MARCUS HA",
    brideName: "THANH THUY",
    meetthebride: "Meet The Bride",
    thechurch: "The Church",
    therestaurant: "The Restaurant",
    yourwish: "Your Wish",
    mins: "Mins",
    days: "Days",
    hours: "Hours",
    sendusyourwish: "Send us your wish",
    message: "We cherish your heartfelt wishes. Please leave your blessing below.",
    send: "Send Wish",
    back: "Back",
    youreinvited: "You're Invited",
    tenthanhgroom: "Joseph Marcus Ha",
    tenthanhbride: "Clara Tran Thi Thanh Thuy",
    churchaddress: "Join us at Tan Chi Linh Church<br>" + 
    "6/25 Pham Van Hai, Ward 3, Tan Binh District",
    churchtime: "June 28th, 2025",
    churchhour: "4:00 PM (GMT+7)",
    quote: "We become what we love and who we love shapes what we become.<br>" +
    "‚Äî St. Clare of Assisi",
    weddingdetails: "Wedding Details",
    restauranttime: "June 28th, 2025<br>" + 
    "6:00 PM (GMT+7)",
    restaurantaddress: "284‚Äì286 Vuon Lai, Phu Tho Hoa, Tan Phu",
    gettingthere: "Getting There",
    dir: "‚Ä¢ 15‚Äì20‚Ä≤ from Church<br />"+
    "‚Ä¢ 25‚Ä≤ from Bride's House",
    drinks: "Drinks",
    alldrinks: "‚Ä¢ Coke ‚Ä¢ Beer ‚Ä¢ Water",
    goodeats: "Good Eats",
    allfoods: "‚Ä¢ Mon 1 ‚Ä¢ Mon 2 ‚Ä¢ Mon 3 ‚Ä¢ Mon 4 ‚Ä¢ Mon 5",
    ourstory: "Our Story",
    firstsentence: "Seven years woven tightly.",
    secondsentence: "I greets the sun in Vietnam as he whispers goodnight from the U.S.",
    thirdsentence: "Our love, tested by miles and strengthened by patience, waits joyfully for the day we'll finally share every sunrise side by side.",
    lastsentence: "And our new chapter begins...",
    invitation: "Reception Invitation",
    togetherwithourfamilies: "Together with our families,",
    inviteat: "invite you to celebrate at Home.",
    meettime: "June 28th, 2025<br />"+
    "1:00 PM (GMT+7)",
    lastword: "We look forward to sharing this joyful moment!"

  },
  vi: {
    groomName: "MARCUS H√Ä",
    brideName: "THANH THU·ª≤",
    meetthebride: "L·ªÖ R∆∞·ªõc D√¢u",
    thechurch: "L·ªÖ H√¥n Ph·ªëi",
    therestaurant: "Ti·ªác C∆∞·ªõi",
    yourwish: "G·ª≠i L·ªùi Ch√∫c",
    mins: "Ph√∫t",
    days: "Ng√†y",
    hours: "Gi·ªù",
    sendusyourwish: "H√£y G·ª≠i L·ªùi Ch√∫c C·ªßa B·∫°n",
    message: "Ch√∫ng t√¥i r·∫•t tr√¢n tr·ªçng nh·ªØng l·ªùi ch√∫c ph√∫c c·ªßa b·∫°n. Xin h√£y ƒë·ªÉ l·∫°i l·ªùi ch√∫c c·ªßa b·∫°n b√™n d∆∞·ªõi.",
    send: "G·ª≠i",
    back: "Quay L·∫°i",
    youreinvited: "B·∫°n ƒê∆∞·ª£c M·ªùi",
    tenthanhgroom: "Giuse H√† Marcus",
    tenthanhbride: "Clara Tr·∫ßn Th·ªã Thanh Th√πy",
    churchaddress: "Tham d·ª± t·∫°i Nh√† Th·ªù T√¢n Chi Linh<br>" + 
    "6/25 Ph·∫°m VƒÉn Hai, Ph∆∞·ªùng 3, Qu·∫≠n T√¢n B√¨nh",
    churchtime: "Ng√†y 28 th√°ng 6 nƒÉm 2025",
    churchhour: "4:00 chi·ªÅu (Gi·ªù Vi·ªát Nam)",
    quote: " ''Ch√∫ng ta tr·ªü th√†nh nh·ªØng g√¨ ch√∫ng ta y√™u v√† ng∆∞·ªùi ch√∫ng ta y√™u th∆∞∆°ng s·∫Ω ƒë·ªãnh h√¨nh n√™n con ng∆∞·ªùi ch√∫ng ta.''<br>" +
    "‚Äî Th√°nh Clara Assisi",
    weddingdetails: "Th√¥ng Tin Ti·ªác C∆∞·ªõi",
    restauranttime: "Ng√†y 28 th√°ng 6 nƒÉm 2025<br>" + 
    "6:00 chi·ªÅu (Gi·ªù Vi·ªát Nam)",
    restaurantaddress: "284‚Äì286 V∆∞·ªùn L√†i, Ph√∫ Th·ªç H√≤a, T√¢n Ph√∫",
    gettingthere: "ƒê∆∞·ªùng ƒê·∫øn Nh√† H√†ng",
    dir: "‚Ä¢ 15‚Äì20‚Ä≤ t·ª´ Nh√† Th·ªù<br />"+
    "‚Ä¢ 25‚Ä≤ t·ª´ Nh√† C√¥ D√¢u",
    drinks: "ƒê·ªì U·ªëng",
    alldrinks: "‚Ä¢ Coca ‚Ä¢ Bia ‚Ä¢ N∆∞·ªõc Su·ªëi",
    goodeats: "M√≥n ƒÇn",
    allfoods: "‚Ä¢ M√≥n 1 ‚Ä¢ M√≥n 2 ‚Ä¢ M√≥n 3 ‚Ä¢ M√≥n 4 ‚Ä¢ M√≥n 5",
    ourstory: "C√¢u Chuy·ªán C·ªßa Ch√∫ng T√¥i",
    firstsentence: "B·∫£y nƒÉm g·∫Øn b√≥.",
    secondsentence: "T√¥i ch√†o ƒë√≥n √°nh n·∫Øng ·ªü Vi·ªát Nam khi anh ·∫•y th√¨ th·∫ßm l·ªùi ch√∫c ng·ªß ngon t·ª´ M·ªπ.",
    thirdsentence: "T√¨nh y√™u c·ªßa ch√∫ng t√¥i, th·ª≠ th√°ch b·ªüi kho·∫£ng c√°ch v√† c·ªßng c·ªë b·ªüi s·ª± ki√™n nh·∫´n, vui m·ª´ng ch·ªù ƒë·ª£i ng√†y ch√∫ng t√¥i s·∫Ω c√πng nhau chia s·∫ª m·ªçi √°nh b√¨nh minh.",
    lastsentence: "V√† ch∆∞∆°ng m·ªõi c·ªßa ch√∫ng t√¥i b·∫Øt ƒë·∫ßu...",
    invitation: "L·ªùi M·ªùi",
    togetherwithourfamilies: "C√πng v·ªõi gia ƒë√¨nh ch√∫ng t√¥i,",
    inviteat: "m·ªùi b·∫°n ƒë·∫øn tham d·ª± l·ªÖ r∆∞·ªõc d√¢u t·∫°i Nh√† C√¥ D√¢u.",
    meettime: "Ng√†y 28 th√°ng 6 nƒÉm 2025<br />"+
    "1:00 chi·ªÅu (Gi·ªù Vi·ªát Nam)",
    lastword: "Ch√∫ng t√¥i r·∫•t mong ƒë∆∞·ª£c chia s·∫ª kho·∫£nh kh·∫Øc vui v·∫ª n√†y v·ªõi b·∫°n!"
  }
};

//MUSIC 
const musicList = [
    'music/summerisforfallinginlove.mp3',
    'music/thoseeyes.mp3',
    'music/mylovemineallmine.mp3',
    'music/ithinktheycallthislove.mp3',
    'music/blue.mp3',
  ];
  let currentAudio = null;
  let isPlaying = false;
  
  function initAudio() {
    playRandomMusic();
  }
  function playRandomMusic() {
    if (isPlaying) return;
  
    const idx = Math.floor(Math.random() * musicList.length);
    currentAudio = new Audio(musicList[idx]);
    currentAudio.volume = 0.5;
    currentAudio.addEventListener('ended', () => {
      const next = (musicList.indexOf(currentAudio.src.split('/').pop()) + 1) % musicList.length;
      currentAudio.src = musicList[next];
      currentAudio.play().catch(e => console.log("Playback failed:", e));
    });
    currentAudio.play()
      .then(() => {
        isPlaying = true;
        document.getElementById('musicToggle').textContent = 'üéµ';
      })
      .catch(err => {
        console.log("Audio failed:", err);
        isPlaying = false;
        document.getElementById('musicToggle').textContent = 'üîá';
        document.addEventListener('click', initAudio, { once: true });
      });
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    // ‚Äî‚Äî two-step grid logic ‚Äî‚Äî
    const formMap = {
      'wish-btn':       'wish-form-container',
      'church-btn':     'church-form-container',
      'restaurant-btn': 'restaurant-form-container',
      'home-btn':       'home-form-container',
    };
    const gridItems = document.querySelectorAll('.grid-item');
    gridItems.forEach(item => {
      item.addEventListener('click', () => {
        if (!item.classList.contains('active')) {
          gridItems.forEach(i => i.classList.remove('active'));
          item.classList.add('active');
          return;  // stop here on first tap
        }
        // second tap ‚Üí open form
        const formId = formMap[item.id];
        if (formId) {
          document.getElementById(formId).style.display = 'flex';
          gridItems.forEach(i => i.classList.remove('active'));
        }
      });
    });
  
    // ‚Äî‚Äî single music-control creation ‚Äî‚Äî
    const musicControls = document.createElement('div');
    musicControls.className = 'music-controls';
    musicControls.style = 'position: fixed; bottom: 20px; right: 20px; z-index: 1000;';
    musicControls.innerHTML = `
      <button onclick="toggleMusic()" id="musicToggle"
              style="padding:10px; border-radius:50%; background:rgba(255,255,255,0.8);">
        üîá
      </button>`;
    document.body.appendChild(musicControls);
  
    initAudio();  // kick off music
  
    // ‚Äî‚Äî door logic ‚Äî‚Äî
    const landing = document.getElementById("landing");
    document.querySelectorAll(".door").forEach(door => {
      door.addEventListener("click", () => {
        if (!landing.classList.contains("open")) {
          landing.classList.add("open");
        }
      });
    });
  
    // ‚Äî‚Äî countdown ‚Äî‚Äî
    updateCountdown();
    setInterval(updateCountdown, 1000);
  });

function toggleMusic() {
    if (!currentAudio) {
        playRandomMusic();
        return;
    }

    if (currentAudio.paused) {
        currentAudio.play()
            .then(() => {
                isPlaying = true;
                document.getElementById('musicToggle').textContent = 'üéµ';
            })
            .catch(error => console.log("Playback failed:", error));
    } else {
        currentAudio.pause();
        isPlaying = false;
        document.getElementById('musicToggle').textContent = 'üîá';
    }
}


// Form close functions
function closeWishForm() {
    document.getElementById("wish-form-container").style.display = "none";
    document.querySelector('.grid-item.active')?.classList.remove('active');
}

function closeChurchForm() {
    document.getElementById("church-form-container").style.display = "none";
    document.querySelector('.grid-item.active')?.classList.remove('active');
}

function closeRestaurantForm() {
    document.getElementById("restaurant-form-container").style.display = "none";
    document.querySelector('.grid-item.active')?.classList.remove('active');
}

function closeHomeForm() {
    document.getElementById("home-form-container").style.display = "none";
    document.querySelector('.grid-item.active')?.classList.remove('active');
}

function sendWish() {
  const nameEl = document.getElementById("name");
  const wishEl = document.getElementById("wish");
  const name = nameEl.value.trim();
  const wish = wishEl.value.trim();

  if (!name || !wish) {
    alert("Please fill out both your name and your wish!");
    return;
  }

  const templateParams = {
    user_name: name,
    message: wish
  };

  // send via EmailJS
  emailjs.send('service_g7g3w0g', 'template_xyez4a7', templateParams)
    .then(response => {
      console.log('SUCCESS:', response.status, response.text);
      alert("Thank you! Your wish has been sent.");
      closeWishForm();
      nameEl.value = "";
      wishEl.value = "";
    })
    .catch(err => {
      console.error('FAILED to send wish:', err);
      alert("Oops‚Äîsomething went wrong. Please try again later.");
    });
}

function updateCountdown() {
    const target = new Date("June 25, 2025 13:00:00").getTime();
    const now = Date.now();
    const diff = target - now;

    if (diff <= 0) {
        document.querySelector(".countdown-timer").innerHTML = 
            "<div class='countdown-box'><div class='countdown-number'>It's time!</div></div>";
        return;
    }

    const days = Math.floor(diff / (1000 * 60 * 60 * 24));
    const hrs = Math.floor((diff / (1000 * 60 * 60)) % 24);
    const mins = Math.floor((diff / (1000 * 60)) % 60);

    document.getElementById("days").textContent = String(days).padStart(2, "0");
    document.getElementById("hours").textContent = String(hrs).padStart(2, "0");
    document.getElementById("minutes").textContent = String(mins).padStart(2, "0");
}

setInterval(updateCountdown, 1000);
updateCountdown();

// ---- language handling ----
const langOverlay = document.getElementById('lang-overlay')
langOverlay.style.display = 'flex';


// When user clicks on a language button‚Ä¶
langOverlay.querySelectorAll('button[data-lang]').forEach(btn => {
  btn.addEventListener('click', () => {
    const lang = btn.dataset.lang;
    localStorage.setItem('lang', lang);
    applyLanguage(lang);
    langOverlay.style.display = 'none';
  });
});

// Function to swap all text and placeholders
function applyLanguage(lang) {
  // text content
  document.querySelectorAll('[data-i18n]').forEach(el => {
    const key = el.dataset.i18n;
    if (translations[lang][key]) {
      el.textContent = translations[lang][key];
    }
  });
  // placeholders
  document.querySelectorAll('[data-i18n-placeholder]').forEach(el => {
    const key = el.dataset.i18nPlaceholder;
    if (translations[lang][key]) {
      el.placeholder = translations[lang][key];
    }
  });
  // 3) HTML content (for anything with tags, like your address)
  document.querySelectorAll('[data-i18n-html]').forEach(el => {
    const key = el.dataset.i18nHtml;
    if (translations[lang][key]) {
      el.innerHTML = translations[lang][key];
    }
  });
}
